using System;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using MainPower.DrawingsDatabase.DatabaseHelper.Properties;

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MainPower.DrawingsDatabase.DatabaseHelper
{
    [Database(Name = "Drawings")]
    public partial class DrawingsDataContext : DataContext
    {
        private static readonly MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions

        partial void OnCreated();
        partial void InsertDrawing(Drawing instance);
        partial void UpdateDrawing(Drawing instance);
        partial void DeleteDrawing(Drawing instance);

        #endregion

        public DrawingsDataContext() :
            base(Settings.Default.DrawingsConnectionString, mappingSource)
        {
            OnCreated();
        }

        public DrawingsDataContext(IDbConnection connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public DrawingsDataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public DrawingsDataContext(IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public Table<Drawing> Drawings
        {
            get { return GetTable<Drawing>(); }
        }
    }

    [Table(Name = "dbo.Drawings")]
    public partial class Drawing : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static readonly PropertyChangingEventArgs emptyChangingEventArgs =
            new PropertyChangingEventArgs(String.Empty);

        private string _APPRV_BY;
        private string _APPRV_BY_A;

        private string _APPRV_BY_B;

        private string _APPRV_BY_C;

        private string _APPRV_BY_D;

        private string _APPRV_BY_E;

        private string _APPRV_BY_F;

        private string _APPRV_BY_G;
        private DateTime? _APPRV_DATE;

        private DrawingCategory _CATEGORY;

        private string _CHECKED_BY;

        private DateTime? _CHECKED_DATE;
        private string _CONSULTANT;
        private string _Comments;

        private DateTime? _DATE_A;

        private DateTime? _DATE_B;

        private DateTime? _DATE_C;

        private DateTime? _DATE_D;

        private DateTime? _DATE_E;

        private DateTime? _DATE_F;

        private DateTime? _DATE_G;

        private string _DESCRIPTION_A;

        private string _DESCRIPTION_B;

        private string _DESCRIPTION_C;

        private string _DESCRIPTION_D;

        private string _DESCRIPTION_E;

        private string _DESCRIPTION_F;

        private string _DESCRIPTION_G;
        private string _DRAWN_BY;
        private string _DRAWN_BY_A;

        private string _DRAWN_BY_B;

        private string _DRAWN_BY_C;

        private string _DRAWN_BY_D;

        private string _DRAWN_BY_E;

        private string _DRAWN_BY_F;

        private string _DRAWN_BY_G;
        private DateTime? _DRAWN_DATE;
        private bool? _ELECTRONIC;
        private string _FILENAME;
        private int _ID = default(int);
        private string _LEGACY_DRAWING;

        private string _NUMBER;

        private string _PROJECT_TITLE;
        private string _REV_A;

        private string _REV_B;

        private string _REV_C;

        private string _REV_D;

        private string _REV_E;

        private string _REV_F;

        private string _REV_G;
        private string _SCALE;
        private string _SHEET;
        private string _SHEET_REVISION;
        private string _SHEET_SIZE;
        private DrawingStatus _STATUS;
        private string _TITLE_LINE_1;
        private string _TITLE_LINE_2;

        private string _TITLE_LINE_3;

        private string _TITLE_LINE_4;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCategoryChanging(DrawingCategory value);
        partial void OnCategoryChanged();
        partial void OnStatusChanging(DrawingStatus value);
        partial void OnStatusChanged();
        partial void OnConsultantChanging(string value);
        partial void OnConsultantChanged();
        partial void OnFilenameChanging(string value);
        partial void OnFilenameChanged();
        partial void OnScaleChanging(string value);
        partial void OnScaleChanged();
        partial void OnLegacyDrawingChanging(string value);
        partial void OnLegacyDrawingChanged();
        partial void OnNumberChanging(string value);
        partial void OnNumberChanged();
        partial void OnProjectTitleChanging(string value);
        partial void OnProjectTitleChanged();
        partial void OnTitleLine1Changing(string value);
        partial void OnTitleLine1Changed();
        partial void OnElectronicChanging(bool? value);
        partial void OnElectronicChanged();
        partial void OnTitleLine2Changing(string value);
        partial void OnTitleLine2Changed();
        partial void OnTitleLine3Changing(string value);
        partial void OnTitleLine3Changed();
        partial void OnTitleLine4Changing(string value);
        partial void OnTitleLine4Changed();
        partial void OnSheetChanging(string value);
        partial void OnSheetChanged();
        partial void OnSheetSizeChanging(string value);
        partial void OnSheetSizeChanged();
        partial void OnSheetRevisionChanging(string value);
        partial void OnSheetRevisionChanged();
        partial void OnDrawnByChanging(string value);
        partial void OnDrawnByChanged();
        partial void OnDrawnDateChanging(DateTime? value);
        partial void OnDrawnDateChanged();
        partial void OnCheckedByChanging(string value);
        partial void OnCheckedByChanged();
        partial void OnCheckedDateChanging(DateTime? value);
        partial void OnCheckedDateChanged();
        partial void OnApprovedByChanging(string value);
        partial void OnApprovedByChanged();
        partial void OnApprovedDateChanging(DateTime? value);
        partial void OnApprovedDateChanged();
        partial void OnRevAChanging(string value);
        partial void OnRevAChanged();
        partial void OnRevBChanging(string value);
        partial void OnRevBChanged();
        partial void OnRevCChanging(string value);
        partial void OnRevCChanged();
        partial void OnRevDChanging(string value);
        partial void OnRevDChanged();
        partial void OnRevEChanging(string value);
        partial void OnRevEChanged();
        partial void OnRevFChanging(string value);
        partial void OnRevFChanged();
        partial void OnRevGChanging(string value);
        partial void OnRevGChanged();
        partial void OnDrawnByRevAChanging(string value);
        partial void OnDrawnByRevAChanged();
        partial void OnDrawnByRevBChanging(string value);
        partial void OnDrawnByRevBChanged();
        partial void OnDrawnByRevCChanging(string value);
        partial void OnDrawnByRevCChanged();
        partial void OnDrawnByRevDChanging(string value);
        partial void OnDrawnByRevDChanged();
        partial void OnDrawnByRevEChanging(string value);
        partial void OnDrawnByRevEChanged();
        partial void OnDrawnByRevFChanging(string value);
        partial void OnDrawnByRevFChanged();
        partial void OnDrawnByRevGChanging(string value);
        partial void OnDrawnByRevGChanged();
        partial void OnDateRevAChanging(DateTime? value);
        partial void OnDateRevAChanged();
        partial void OnDateRevBChanging(DateTime? value);
        partial void OnDateRevBChanged();
        partial void OnDateRevCChanging(DateTime? value);
        partial void OnDateRevCChanged();
        partial void OnDateRevDChanging(DateTime? value);
        partial void OnDateRevDChanged();
        partial void OnDateRevEChanging(DateTime? value);
        partial void OnDateRevEChanged();
        partial void OnDateRevFChanging(DateTime? value);
        partial void OnDateRevFChanged();
        partial void OnDateRevGChanging(DateTime? value);
        partial void OnDateRevGChanged();
        partial void OnDescriptionRevAChanging(string value);
        partial void OnDescriptionRevAChanged();
        partial void OnDescriptionRevBChanging(string value);
        partial void OnDescriptionRevBChanged();
        partial void OnDescriptionRevCChanging(string value);
        partial void OnDescriptionRevCChanged();
        partial void OnDescriptionRevDChanging(string value);
        partial void OnDescriptionRevDChanged();
        partial void OnDescriptionRevEChanging(string value);
        partial void OnDescriptionRevEChanged();
        partial void OnDescriptionRevFChanging(string value);
        partial void OnDescriptionRevFChanged();
        partial void OnDescriptionRevGChanging(string value);
        partial void OnDescriptionRevGChanged();
        partial void OnApprovedByRevAChanging(string value);
        partial void OnApprovedByRevAChanged();
        partial void OnApprovedByRevBChanging(string value);
        partial void OnApprovedByRevBChanged();
        partial void OnApprovedByRevCChanging(string value);
        partial void OnApprovedByRevCChanged();
        partial void OnApprovedByRevDChanging(string value);
        partial void OnApprovedByRevDChanged();
        partial void OnApprovedByRevEChanging(string value);
        partial void OnApprovedByRevEChanged();
        partial void OnApprovedByRevFChanging(string value);
        partial void OnApprovedByRevFChanged();
        partial void OnApprovedByRevGChanging(string value);
        partial void OnApprovedByRevGChanged();
        partial void OnCommentsChanging(string value);
        partial void OnCommentsChanged();

        #endregion

        public Drawing()
        {
            OnCreated();
        }

        [Column(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true,
            IsDbGenerated = true, UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get { return _ID; }
        }

        [Column(Name = "CATEGORY", Storage = "_CATEGORY", DbType = "Int NOT NULL", CanBeNull = false)]
        public DrawingCategory Category
        {
            get { return _CATEGORY; }
            set
            {
                if ((_CATEGORY != value))
                {
                    OnCategoryChanging(value);
                    SendPropertyChanging();
                    _CATEGORY = value;
                    SendPropertyChanged("Category");
                    OnCategoryChanged();
                }
            }
        }

        [Column(Name = "STATUS", Storage = "_STATUS", DbType = "Int NOT NULL", CanBeNull = false)]
        public DrawingStatus Status
        {
            get { return _STATUS; }
            set
            {
                if ((_STATUS != value))
                {
                    OnStatusChanging(value);
                    SendPropertyChanging();
                    _STATUS = value;
                    SendPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }

        [Column(Name = "CONSULTANT", Storage = "_CONSULTANT", DbType = "NVarChar(256)")]
        public string Consultant
        {
            get { return _CONSULTANT; }
            set
            {
                if ((_CONSULTANT != value))
                {
                    OnConsultantChanging(value);
                    SendPropertyChanging();
                    _CONSULTANT = value;
                    SendPropertyChanged("Consultant");
                    OnConsultantChanged();
                }
            }
        }

        [Column(Name = "FILENAME", Storage = "_FILENAME", DbType = "NVarChar(512)")]
        public string FileName
        {
            get { return _FILENAME; }
            set
            {
                if ((_FILENAME != value))
                {
                    OnFilenameChanging(value);
                    SendPropertyChanging();
                    _FILENAME = value;
                    SendPropertyChanged("Filename");
                    OnFilenameChanged();
                }
            }
        }

        [Column(Name = "SCALE", Storage = "_SCALE", DbType = "NVarChar(10)")]
        public string Scale
        {
            get { return _SCALE; }
            set
            {
                if ((_SCALE != value))
                {
                    OnScaleChanging(value);
                    SendPropertyChanging();
                    _SCALE = value;
                    SendPropertyChanged("Scale");
                    OnScaleChanged();
                }
            }
        }

        [Column(Name = "LEGACY_DRAWING", Storage = "_LEGACY_DRAWING", DbType = "NVarChar(256)")]
        public string LegacyDrawing
        {
            get { return _LEGACY_DRAWING; }
            set
            {
                if ((_LEGACY_DRAWING != value))
                {
                    OnLegacyDrawingChanging(value);
                    SendPropertyChanging();
                    _LEGACY_DRAWING = value;
                    SendPropertyChanged("LegacyDrawing");
                    OnLegacyDrawingChanged();
                }
            }
        }

        [Column(Name = "NUMBER", Storage = "_NUMBER", DbType = "NVarChar(40) NOT NULL", CanBeNull = false)]
        public string Number
        {
            get { return _NUMBER; }
            set
            {
                if ((_NUMBER != value))
                {
                    OnNumberChanging(value);
                    SendPropertyChanging();
                    _NUMBER = value;
                    SendPropertyChanged("Number");
                    OnNumberChanged();
                }
            }
        }

        [Column(Name = "PROJECT_TITLE", Storage = "_PROJECT_TITLE", DbType = "NVarChar(256)")]
        public string ProjectTitle
        {
            get { return _PROJECT_TITLE; }
            set
            {
                if ((_PROJECT_TITLE != value))
                {
                    OnProjectTitleChanging(value);
                    SendPropertyChanging();
                    _PROJECT_TITLE = value;
                    SendPropertyChanged("ProjectTitle");
                    OnProjectTitleChanged();
                }
            }
        }

        [Column(Name = "TITLE_LINE_1", Storage = "_TITLE_LINE_1", DbType = "NVarChar(256)")]
        public string TitleLine1
        {
            get { return _TITLE_LINE_1; }
            set
            {
                if ((_TITLE_LINE_1 != value))
                {
                    OnTitleLine1Changing(value);
                    SendPropertyChanging();
                    _TITLE_LINE_1 = value;
                    SendPropertyChanged("TitleLine1");
                    OnTitleLine1Changed();
                }
            }
        }

        [Column(Name = "ELECTRONIC", Storage = "_ELECTRONIC", DbType = "Bit")]
        public bool? Electronic
        {
            get { return _ELECTRONIC; }
            set
            {
                if ((_ELECTRONIC != value))
                {
                    OnElectronicChanging(value);
                    SendPropertyChanging();
                    _ELECTRONIC = value;
                    SendPropertyChanged("Electronic");
                    OnElectronicChanged();
                }
            }
        }

        [Column(Name = "TITLE_LINE_2", Storage = "_TITLE_LINE_2", DbType = "NVarChar(256)")]
        public string TitleLine2
        {
            get { return _TITLE_LINE_2; }
            set
            {
                if ((_TITLE_LINE_2 != value))
                {
                    OnTitleLine2Changing(value);
                    SendPropertyChanging();
                    _TITLE_LINE_2 = value;
                    SendPropertyChanged("TitleLine2");
                    OnTitleLine2Changed();
                }
            }
        }

        [Column(Name = "TITLE_LINE_3", Storage = "_TITLE_LINE_3", DbType = "NVarChar(256)")]
        public string TitleLine3
        {
            get { return _TITLE_LINE_3; }
            set
            {
                if ((_TITLE_LINE_3 != value))
                {
                    OnTitleLine3Changing(value);
                    SendPropertyChanging();
                    _TITLE_LINE_3 = value;
                    SendPropertyChanged("TitleLine3");
                    OnTitleLine3Changed();
                }
            }
        }

        [Column(Name = "TITLE_LINE_4", Storage = "_TITLE_LINE_4", DbType = "NChar(10)")]
        public string TitleLine4
        {
            get { return _TITLE_LINE_4; }
            set
            {
                if ((_TITLE_LINE_4 != value))
                {
                    OnTitleLine4Changing(value);
                    SendPropertyChanging();
                    _TITLE_LINE_4 = value;
                    SendPropertyChanged("TitleLine4");
                    OnTitleLine4Changed();
                }
            }
        }

        [Column(Name = "SHEET", Storage = "_SHEET", DbType = "NVarChar(10) NOT NULL", CanBeNull = false)]
        public string Sheet
        {
            get { return _SHEET; }
            set
            {
                if ((_SHEET != value))
                {
                    OnSheetChanging(value);
                    SendPropertyChanging();
                    _SHEET = value;
                    SendPropertyChanged("Sheet");
                    OnSheetChanged();
                }
            }
        }

        [Column(Name = "SHEET_SIZE", Storage = "_SHEET_SIZE", DbType = "NVarChar(10)")]
        public string SheetSize
        {
            get { return _SHEET_SIZE; }
            set
            {
                if ((_SHEET_SIZE != value))
                {
                    OnSheetSizeChanging(value);
                    SendPropertyChanging();
                    _SHEET_SIZE = value;
                    SendPropertyChanged("SheetSize");
                    OnSheetSizeChanged();
                }
            }
        }

        [Column(Name = "SHEET_REVISION", Storage = "_SHEET_REVISION", DbType = "NVarChar(10)")]
        public string SheetRevision
        {
            get { return _SHEET_REVISION; }
            set
            {
                if ((_SHEET_REVISION != value))
                {
                    OnSheetRevisionChanging(value);
                    SendPropertyChanging();
                    _SHEET_REVISION = value;
                    SendPropertyChanged("SheetRevision");
                    OnSheetRevisionChanged();
                }
            }
        }

        [Column(Name = "DRAWN_BY", Storage = "_DRAWN_BY", DbType = "NVarChar(20)")]
        public string DrawnBy
        {
            get { return _DRAWN_BY; }
            set
            {
                if ((_DRAWN_BY != value))
                {
                    OnDrawnByChanging(value);
                    SendPropertyChanging();
                    _DRAWN_BY = value;
                    SendPropertyChanged("DrawnBy");
                    OnDrawnByChanged();
                }
            }
        }

        [Column(Name = "DRAWN_DATE", Storage = "_DRAWN_DATE", DbType = "DateTime")]
        public DateTime? DrawnDate
        {
            get { return _DRAWN_DATE; }
            set
            {
                if ((_DRAWN_DATE != value))
                {
                    OnDrawnDateChanging(value);
                    SendPropertyChanging();
                    _DRAWN_DATE = value;
                    SendPropertyChanged("DrawnDate");
                    OnDrawnDateChanged();
                }
            }
        }

        [Column(Name = "CHECKED_BY", Storage = "_CHECKED_BY", DbType = "NVarChar(20)")]
        public string CheckedBy
        {
            get { return _CHECKED_BY; }
            set
            {
                if ((_CHECKED_BY != value))
                {
                    OnCheckedByChanging(value);
                    SendPropertyChanging();
                    _CHECKED_BY = value;
                    SendPropertyChanged("CheckedBy");
                    OnCheckedByChanged();
                }
            }
        }

        [Column(Name = "CHECKED_DATE", Storage = "_CHECKED_DATE", DbType = "DateTime")]
        public DateTime? CheckedDate
        {
            get { return _CHECKED_DATE; }
            set
            {
                if ((_CHECKED_DATE != value))
                {
                    OnCheckedDateChanging(value);
                    SendPropertyChanging();
                    _CHECKED_DATE = value;
                    SendPropertyChanged("CheckedDate");
                    OnCheckedDateChanged();
                }
            }
        }

        [Column(Name = "APPRV_BY", Storage = "_APPRV_BY", DbType = "NVarChar(20)")]
        public string ApprovedBy
        {
            get { return _APPRV_BY; }
            set
            {
                if ((_APPRV_BY != value))
                {
                    OnApprovedByChanging(value);
                    SendPropertyChanging();
                    _APPRV_BY = value;
                    SendPropertyChanged("ApprovedBy");
                    OnApprovedByChanged();
                }
            }
        }

        [Column(Name = "APPRV_DATE", Storage = "_APPRV_DATE", DbType = "DateTime")]
        public DateTime? ApprovedDate
        {
            get { return _APPRV_DATE; }
            set
            {
                if ((_APPRV_DATE != value))
                {
                    OnApprovedDateChanging(value);
                    SendPropertyChanging();
                    _APPRV_DATE = value;
                    SendPropertyChanged("ApprovedDate");
                    OnApprovedDateChanged();
                }
            }
        }

        [Category("Rev A")]
        [Column(Name = "REV_A", Storage = "_REV_A", DbType = "NVarChar(10)")]
        public string RevA
        {
            get { return _REV_A; }
            set
            {
                if ((_REV_A != value))
                {
                    OnRevAChanging(value);
                    SendPropertyChanging();
                    _REV_A = value;
                    SendPropertyChanged("RevA");
                    OnRevAChanged();
                }
            }
        }

        [Category("Rev B")]
        [Column(Name = "REV_B", Storage = "_REV_B", DbType = "NVarChar(10)")]
        public string RevB
        {
            get { return _REV_B; }
            set
            {
                if ((_REV_B != value))
                {
                    OnRevBChanging(value);
                    SendPropertyChanging();
                    _REV_B = value;
                    SendPropertyChanged("RevB");
                    OnRevBChanged();
                }
            }
        }

        [Category("Rev C")]
        [Column(Name = "REV_C", Storage = "_REV_C", DbType = "NVarChar(10)")]
        public string RevC
        {
            get { return _REV_C; }
            set
            {
                if ((_REV_C != value))
                {
                    OnRevCChanging(value);
                    SendPropertyChanging();
                    _REV_C = value;
                    SendPropertyChanged("RevC");
                    OnRevCChanged();
                }
            }
        }

        [Category("Rev D")]
        [Column(Name = "REV_D", Storage = "_REV_D", DbType = "NVarChar(10)")]
        public string RevD
        {
            get { return _REV_D; }
            set
            {
                if ((_REV_D != value))
                {
                    OnRevDChanging(value);
                    SendPropertyChanging();
                    _REV_D = value;
                    SendPropertyChanged("RevD");
                    OnRevDChanged();
                }
            }
        }

        [Category("Rev E")]
        [Column(Name = "REV_E", Storage = "_REV_E", DbType = "NVarChar(10)")]
        public string RevE
        {
            get { return _REV_E; }
            set
            {
                if ((_REV_E != value))
                {
                    OnRevEChanging(value);
                    SendPropertyChanging();
                    _REV_E = value;
                    SendPropertyChanged("RevE");
                    OnRevEChanged();
                }
            }
        }

        [Category("Rev F")]
        [Column(Name = "REV_F", Storage = "_REV_F", DbType = "NVarChar(10)")]
        public string RevF
        {
            get { return _REV_F; }
            set
            {
                if ((_REV_F != value))
                {
                    OnRevFChanging(value);
                    SendPropertyChanging();
                    _REV_F = value;
                    SendPropertyChanged("RevF");
                    OnRevFChanged();
                }
            }
        }

        [Category("Rev G")]
        [Column(Name = "REV_G", Storage = "_REV_G", DbType = "NVarChar(10)")]
        public string RevG
        {
            get { return _REV_G; }
            set
            {
                if ((_REV_G != value))
                {
                    OnRevGChanging(value);
                    SendPropertyChanging();
                    _REV_G = value;
                    SendPropertyChanged("RevG");
                    OnRevGChanged();
                }
            }
        }

        [Category("Rev A")]
        [Column(Name = "DRAWN_BY_A", Storage = "_DRAWN_BY_A", DbType = "NVarChar(20)")]
        public string DrawnByRevA
        {
            get { return _DRAWN_BY_A; }
            set
            {
                if ((_DRAWN_BY_A != value))
                {
                    OnDrawnByRevAChanging(value);
                    SendPropertyChanging();
                    _DRAWN_BY_A = value;
                    SendPropertyChanged("DrawnByRevA");
                    OnDrawnByRevAChanged();
                }
            }
        }

        [Category("Rev B")]
        [Column(Name = "DRAWN_BY_B", Storage = "_DRAWN_BY_B", DbType = "NVarChar(20)")]
        public string DrawnByRevB
        {
            get { return _DRAWN_BY_B; }
            set
            {
                if ((_DRAWN_BY_B != value))
                {
                    OnDrawnByRevBChanging(value);
                    SendPropertyChanging();
                    _DRAWN_BY_B = value;
                    SendPropertyChanged("DrawnByRevB");
                    OnDrawnByRevBChanged();
                }
            }
        }

        [Category("Rev C")]
        [Column(Name = "DRAWN_BY_C", Storage = "_DRAWN_BY_C", DbType = "NVarChar(20)")]
        public string DrawnByRevC
        {
            get { return _DRAWN_BY_C; }
            set
            {
                if ((_DRAWN_BY_C != value))
                {
                    OnDrawnByRevCChanging(value);
                    SendPropertyChanging();
                    _DRAWN_BY_C = value;
                    SendPropertyChanged("DrawnByRevC");
                    OnDrawnByRevCChanged();
                }
            }
        }

        [Category("Rev D")]
        [Column(Name = "DRAWN_BY_D", Storage = "_DRAWN_BY_D", DbType = "NVarChar(20)")]
        public string DrawnByRevD
        {
            get { return _DRAWN_BY_D; }
            set
            {
                if ((_DRAWN_BY_D != value))
                {
                    OnDrawnByRevDChanging(value);
                    SendPropertyChanging();
                    _DRAWN_BY_D = value;
                    SendPropertyChanged("DrawnByRevD");
                    OnDrawnByRevDChanged();
                }
            }
        }

        [Category("Rev E")]
        [Column(Name = "DRAWN_BY_E", Storage = "_DRAWN_BY_E", DbType = "NVarChar(20)")]
        public string DrawnByRevE
        {
            get { return _DRAWN_BY_E; }
            set
            {
                if ((_DRAWN_BY_E != value))
                {
                    OnDrawnByRevEChanging(value);
                    SendPropertyChanging();
                    _DRAWN_BY_E = value;
                    SendPropertyChanged("DrawnByRevE");
                    OnDrawnByRevEChanged();
                }
            }
        }

        [Category("Rev F")]
        [Column(Name = "DRAWN_BY_F", Storage = "_DRAWN_BY_F", DbType = "NVarChar(20)")]
        public string DrawnByRevF
        {
            get { return _DRAWN_BY_F; }
            set
            {
                if ((_DRAWN_BY_F != value))
                {
                    OnDrawnByRevFChanging(value);
                    SendPropertyChanging();
                    _DRAWN_BY_F = value;
                    SendPropertyChanged("DrawnByRevF");
                    OnDrawnByRevFChanged();
                }
            }
        }

        [Category("Rev G")]
        [Column(Name = "DRAWN_BY_G", Storage = "_DRAWN_BY_G", DbType = "NVarChar(20)")]
        public string DrawnByRevG
        {
            get { return _DRAWN_BY_G; }
            set
            {
                if ((_DRAWN_BY_G != value))
                {
                    OnDrawnByRevGChanging(value);
                    SendPropertyChanging();
                    _DRAWN_BY_G = value;
                    SendPropertyChanged("DrawnByRevG");
                    OnDrawnByRevGChanged();
                }
            }
        }

        [Category("Rev A")]
        [Column(Name = "DATE_A", Storage = "_DATE_A", DbType = "DateTime")]
        public DateTime? DateRevA
        {
            get { return _DATE_A; }
            set
            {
                if ((_DATE_A != value))
                {
                    OnDateRevAChanging(value);
                    SendPropertyChanging();
                    _DATE_A = value;
                    SendPropertyChanged("DateRevA");
                    OnDateRevAChanged();
                }
            }
        }

        [Category("Rev B")]
        [Column(Name = "DATE_B", Storage = "_DATE_B", DbType = "DateTime")]
        public DateTime? DateRevB
        {
            get { return _DATE_B; }
            set
            {
                if ((_DATE_B != value))
                {
                    OnDateRevBChanging(value);
                    SendPropertyChanging();
                    _DATE_B = value;
                    SendPropertyChanged("DateRevB");
                    OnDateRevBChanged();
                }
            }
        }

        [Category("Rev C")]
        [Column(Name = "DATE_C", Storage = "_DATE_C", DbType = "DateTime")]
        public DateTime? DateRevC
        {
            get { return _DATE_C; }
            set
            {
                if ((_DATE_C != value))
                {
                    OnDateRevCChanging(value);
                    SendPropertyChanging();
                    _DATE_C = value;
                    SendPropertyChanged("DateRevC");
                    OnDateRevCChanged();
                }
            }
        }

        [Category("Rev D")]
        [Column(Name = "DATE_D", Storage = "_DATE_D", DbType = "DateTime")]
        public DateTime? DateRevD
        {
            get { return _DATE_D; }
            set
            {
                if ((_DATE_D != value))
                {
                    OnDateRevDChanging(value);
                    SendPropertyChanging();
                    _DATE_D = value;
                    SendPropertyChanged("DateRevD");
                    OnDateRevDChanged();
                }
            }
        }

        [Category("Rev E")]
        [Column(Name = "DATE_E", Storage = "_DATE_E", DbType = "DateTime")]
        public DateTime? DateRevE
        {
            get { return _DATE_E; }
            set
            {
                if ((_DATE_E != value))
                {
                    OnDateRevEChanging(value);
                    SendPropertyChanging();
                    _DATE_E = value;
                    SendPropertyChanged("DateRevE");
                    OnDateRevEChanged();
                }
            }
        }

        [Category("Rev F")]
        [Column(Name = "DATE_F", Storage = "_DATE_F", DbType = "DateTime")]
        public DateTime? DateRevF
        {
            get { return _DATE_F; }
            set
            {
                if ((_DATE_F != value))
                {
                    OnDateRevFChanging(value);
                    SendPropertyChanging();
                    _DATE_F = value;
                    SendPropertyChanged("DateRevF");
                    OnDateRevFChanged();
                }
            }
        }

        [Category("Rev G")]
        [Column(Name = "DATE_G", Storage = "_DATE_G", DbType = "DateTime")]
        public DateTime? DateRevG
        {
            get { return _DATE_G; }
            set
            {
                if ((_DATE_G != value))
                {
                    OnDateRevGChanging(value);
                    SendPropertyChanging();
                    _DATE_G = value;
                    SendPropertyChanged("DateRevG");
                    OnDateRevGChanged();
                }
            }
        }

        [Category("Rev A")]
        [Column(Name = "DESCRIPTION_A", Storage = "_DESCRIPTION_A", DbType = "NVarChar(256)")]
        public string DescriptionRevA
        {
            get { return _DESCRIPTION_A; }
            set
            {
                if ((_DESCRIPTION_A != value))
                {
                    OnDescriptionRevAChanging(value);
                    SendPropertyChanging();
                    _DESCRIPTION_A = value;
                    SendPropertyChanged("DescriptionRevA");
                    OnDescriptionRevAChanged();
                }
            }
        }

        [Category("Rev B")]
        [Column(Name = "DESCRIPTION_B", Storage = "_DESCRIPTION_B", DbType = "NVarChar(256)")]
        public string DescriptionRevB
        {
            get { return _DESCRIPTION_B; }
            set
            {
                if ((_DESCRIPTION_B != value))
                {
                    OnDescriptionRevBChanging(value);
                    SendPropertyChanging();
                    _DESCRIPTION_B = value;
                    SendPropertyChanged("DescriptionRevB");
                    OnDescriptionRevBChanged();
                }
            }
        }

        [Category("Rev C")]
        [Column(Name = "DESCRIPTION_C", Storage = "_DESCRIPTION_C", DbType = "NVarChar(256)")]
        public string DescriptionRevC
        {
            get { return _DESCRIPTION_C; }
            set
            {
                if ((_DESCRIPTION_C != value))
                {
                    OnDescriptionRevCChanging(value);
                    SendPropertyChanging();
                    _DESCRIPTION_C = value;
                    SendPropertyChanged("DescriptionRevC");
                    OnDescriptionRevCChanged();
                }
            }
        }

        [Category("Rev D")]
        [Column(Name = "DESCRIPTION_D", Storage = "_DESCRIPTION_D", DbType = "NVarChar(256)")]
        public string DescriptionRevD
        {
            get { return _DESCRIPTION_D; }
            set
            {
                if ((_DESCRIPTION_D != value))
                {
                    OnDescriptionRevDChanging(value);
                    SendPropertyChanging();
                    _DESCRIPTION_D = value;
                    SendPropertyChanged("DescriptionRevD");
                    OnDescriptionRevDChanged();
                }
            }
        }

        [Category("Rev E")]
        [Column(Name = "DESCRIPTION_E", Storage = "_DESCRIPTION_E", DbType = "NVarChar(256)")]
        public string DescriptionRevE
        {
            get { return _DESCRIPTION_E; }
            set
            {
                if ((_DESCRIPTION_E != value))
                {
                    OnDescriptionRevEChanging(value);
                    SendPropertyChanging();
                    _DESCRIPTION_E = value;
                    SendPropertyChanged("DescriptionRevE");
                    OnDescriptionRevEChanged();
                }
            }
        }

        [Category("Rev F")]
        [Column(Name = "DESCRIPTION_F", Storage = "_DESCRIPTION_F", DbType = "NVarChar(256)")]
        public string DescriptionRevF
        {
            get { return _DESCRIPTION_F; }
            set
            {
                if ((_DESCRIPTION_F != value))
                {
                    OnDescriptionRevFChanging(value);
                    SendPropertyChanging();
                    _DESCRIPTION_F = value;
                    SendPropertyChanged("DescriptionRevF");
                    OnDescriptionRevFChanged();
                }
            }
        }

        [Category("Rev G")]
        [Column(Name = "DESCRIPTION_G", Storage = "_DESCRIPTION_G", DbType = "NVarChar(256)")]
        public string DescriptionRevG
        {
            get { return _DESCRIPTION_G; }
            set
            {
                if ((_DESCRIPTION_G != value))
                {
                    OnDescriptionRevGChanging(value);
                    SendPropertyChanging();
                    _DESCRIPTION_G = value;
                    SendPropertyChanged("DescriptionRevG");
                    OnDescriptionRevGChanged();
                }
            }
        }

        [Category("Rev A")]
        [Column(Name = "APPRV_BY_A", Storage = "_APPRV_BY_A", DbType = "NVarChar(20)")]
        public string ApprovedByRevA
        {
            get { return _APPRV_BY_A; }
            set
            {
                if ((_APPRV_BY_A != value))
                {
                    OnApprovedByRevAChanging(value);
                    SendPropertyChanging();
                    _APPRV_BY_A = value;
                    SendPropertyChanged("ApprovedByRevA");
                    OnApprovedByRevAChanged();
                }
            }
        }

        [Category("Rev B")]
        [Column(Name = "APPRV_BY_B", Storage = "_APPRV_BY_B", DbType = "NVarChar(20)")]
        public string ApprovedByRevB
        {
            get { return _APPRV_BY_B; }
            set
            {
                if ((_APPRV_BY_B != value))
                {
                    OnApprovedByRevBChanging(value);
                    SendPropertyChanging();
                    _APPRV_BY_B = value;
                    SendPropertyChanged("ApprovedByRevB");
                    OnApprovedByRevBChanged();
                }
            }
        }

        [Category("Rev C")]
        [Column(Name = "APPRV_BY_C", Storage = "_APPRV_BY_C", DbType = "NVarChar(20)")]
        public string ApprovedByRevC
        {
            get { return _APPRV_BY_C; }
            set
            {
                if ((_APPRV_BY_C != value))
                {
                    OnApprovedByRevCChanging(value);
                    SendPropertyChanging();
                    _APPRV_BY_C = value;
                    SendPropertyChanged("ApprovedByRevC");
                    OnApprovedByRevCChanged();
                }
            }
        }

        [Category("Rev D")]
        [Column(Name = "APPRV_BY_D", Storage = "_APPRV_BY_D", DbType = "NVarChar(20)")]
        public string ApprovedByRevD
        {
            get { return _APPRV_BY_D; }
            set
            {
                if ((_APPRV_BY_D != value))
                {
                    OnApprovedByRevDChanging(value);
                    SendPropertyChanging();
                    _APPRV_BY_D = value;
                    SendPropertyChanged("ApprovedByRevD");
                    OnApprovedByRevDChanged();
                }
            }
        }

        [Category("Rev E")]
        [Column(Name = "APPRV_BY_E", Storage = "_APPRV_BY_E", DbType = "NVarChar(20)")]
        public string ApprovedByRevE
        {
            get { return _APPRV_BY_E; }
            set
            {
                if ((_APPRV_BY_E != value))
                {
                    OnApprovedByRevEChanging(value);
                    SendPropertyChanging();
                    _APPRV_BY_E = value;
                    SendPropertyChanged("ApprovedByRevE");
                    OnApprovedByRevEChanged();
                }
            }
        }

        [Category("Rev F")]
        [Column(Name = "APPRV_BY_F", Storage = "_APPRV_BY_F", DbType = "NVarChar(20)")]
        public string ApprovedByRevF
        {
            get { return _APPRV_BY_F; }
            set
            {
                if ((_APPRV_BY_F != value))
                {
                    OnApprovedByRevFChanging(value);
                    SendPropertyChanging();
                    _APPRV_BY_F = value;
                    SendPropertyChanged("ApprovedByRevF");
                    OnApprovedByRevFChanged();
                }
            }
        }

        [Category("Rev G")]
        [Column(Name = "APPRV_BY_G", Storage = "_APPRV_BY_G", DbType = "NVarChar(20)")]
        public string ApprovedByRevG
        {
            get { return _APPRV_BY_G; }
            set
            {
                if ((_APPRV_BY_G != value))
                {
                    OnApprovedByRevGChanging(value);
                    SendPropertyChanging();
                    _APPRV_BY_G = value;
                    SendPropertyChanged("ApprovedByRevG");
                    OnApprovedByRevGChanged();
                }
            }
        }

        [Column(Name = "COMMENTS", Storage = "_Comments", DbType = "NVarChar(256)")]
        public string Comments
        {
            get { return _Comments; }
            set
            {
                if ((_Comments != value))
                {
                    OnCommentsChanging(value);
                    SendPropertyChanging();
                    _Comments = value;
                    SendPropertyChanged("Comments");
                    OnCommentsChanged();
                }
            }
        }

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        #region INotifyPropertyChanging Members

        public event PropertyChangingEventHandler PropertyChanging;

        #endregion

        protected virtual void SendPropertyChanging()
        {
            if ((PropertyChanging != null))
            {
                PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((PropertyChanged != null))
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
}

#pragma warning restore 1591